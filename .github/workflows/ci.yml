name: CI
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  run-clippy:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo clippy --all-targets --all-features -- -Dwarnings -Wclippy::pedantic
  run-pre-commit:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx run pre-commit run --all-files --show-diff-on-failure
  run-rustfmt:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain install nightly --profile minimal --component rustfmt --no-self-update --allow-downgrade
      - run: cargo +nightly fmt --check
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64
          - x86
          - aarch64
          - armv7
          - s390x
          - ppc64le
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist
      - name: pytest
        if: ${{ !startsWith(github.ref, 'refs/tags/') && matrix.target == 'x86_64' }}
        run: pip install --force-reinstall --no-index --find-links dist pyromark && cd tests && pip install -U --disable-pip-version-check -r requirements.txt && pytest
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x64
          - x86
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist
      - name: pytest
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: pip install --force-reinstall --no-index --find-links dist pyromark && cd tests && pip install -U --disable-pip-version-check -r requirements.txt && pytest
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64
          - aarch64
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist
      - name: pytest
        if: ${{ !startsWith(github.ref, 'refs/tags/') && matrix.target == 'x86_64' }}
        run: pip install --force-reinstall --no-index --find-links dist pyromark && cd tests && pip install -U --disable-pip-version-check -r requirements.txt && pytest
  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist
  release:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs:
      - linux
      - windows
      - macos
      - sdist
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing *
