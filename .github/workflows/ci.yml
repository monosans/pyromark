name: CI
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            runner: ubuntu-24.04
            manylinux: "2014"
          - target: x86_64-unknown-linux-gnu
            runner: ubuntu-24.04
            manylinux: "2_28"
          - target: x86_64-unknown-linux-gnu
            runner: ubuntu-24.04
            manylinux: "2_34"
          - target: x86_64-unknown-linux-musl
            runner: ubuntu-24.04
            manylinux: musllinux_1_2
          - target: i686-unknown-linux-gnu
            runner: ubuntu-24.04
            manylinux: "2014"
          - target: i686-unknown-linux-musl
            runner: ubuntu-24.04
            manylinux: musllinux_1_2
          - target: aarch64-unknown-linux-gnu
            runner: ubuntu-24.04-arm
            manylinux: "2014"
          - target: aarch64-unknown-linux-gnu
            runner: ubuntu-24.04-arm
            manylinux: "2_28"
          - target: aarch64-unknown-linux-gnu
            runner: ubuntu-24.04-arm
            manylinux: "2_34"
          - target: aarch64-unknown-linux-musl
            runner: ubuntu-24.04
            manylinux: musllinux_1_2
          - target: armv7-unknown-linux-gnueabihf
            runner: ubuntu-24.04
            manylinux: "2014"
          - target: armv7-unknown-linux-gnueabihf
            runner: ubuntu-24.04
            manylinux: "2_28"
          - target: armv7-unknown-linux-musleabihf
            runner: ubuntu-24.04
            manylinux: musllinux_1_2
          - target: powerpc64-unknown-linux-gnu
            runner: ubuntu-24.04
            manylinux: "2014"
          - target: powerpc64le-unknown-linux-gnu
            runner: ubuntu-24.04
            manylinux: "2014"
          - target: powerpc64le-unknown-linux-gnu
            runner: ubuntu-24.04
            manylinux: "2_28"
          - target: s390x-unknown-linux-gnu
            runner: ubuntu-24.04
            manylinux: "2014"
          - target: s390x-unknown-linux-gnu
            runner: ubuntu-24.04
            manylinux: "2_28"
          - target: x86_64-apple-darwin
            runner: macos-13
            setup-python-versions: |
              3.9
              3.10
              3.11
              3.12
              pypy3.9
              pypy3.10
              3.13
          - target: aarch64-apple-darwin
            runner: macos-15
            setup-python-versions: |
              3.9
              3.10
              3.11
              3.12
              pypy3.9
              pypy3.10
              3.13
          - target: x86_64-pc-windows-msvc
            runner: windows-2025
            setup-python-architecture: x64
            setup-python-versions: |
              3.9
              3.10
              3.11
              3.12
              3.13
            build-python-versions: 3.9 3.10 3.11 3.12 3.13
          - target: i686-pc-windows-msvc
            runner: windows-2025
            setup-python-architecture: x86
            setup-python-versions: |
              3.9
              3.10
              3.11
              3.12
              3.13
            build-python-versions: 3.9 3.10 3.11 3.12 3.13
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - if: "${{ matrix.setup-python-versions }}"
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.setup-python-versions }}"
          architecture: "${{ matrix.setup-python-architecture || '' }}"
          check-latest: true
      - uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist --interpreter '${{ matrix.build-python-versions || '3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10' }}'
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux || 'auto' }}
          sccache: "true"
          before-script-linux: python3 -m pip --version || python3 -m ensurepip
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.target }}-${{ matrix.manylinux || 'auto' }}
          path: dist
  pytest:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    needs:
      - build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.13"
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/download-artifact@v4
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: |
          set -e
          uv sync --no-install-project --frozen --python ${{ matrix.python-version }}
          uv pip install --find-links ../dist --no-index pyromark
          uv run --no-sync pytest
  check:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    needs:
      - build
      - clippy
      - pre-commit
      - pytest
      - rustfmt
      - sdist
    runs-on: ubuntu-24.04
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
  clippy:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - run: cargo +stable clippy --all-targets --all-features -- -Dwarnings -Wclippy::pedantic
  pre-commit:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: false
      - run: uv tool run --from pre-commit@latest --with pre-commit-uv --no-cache --python 3.13 pre-commit run --all-files
  release:
    runs-on: ubuntu-24.04
    if: ${{ github.repository_owner == 'monosans' && startsWith(github.ref, 'refs/tags/') }}
    needs:
      - build
      - sdist
    permissions:
      id-token: write
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - uses: actions/attest-build-provenance@v2
        with:
          subject-path: wheels-*/*
      - uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
  rustfmt:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - run: rustup toolchain install nightly --profile minimal --component rustfmt --no-self-update --allow-downgrade
      - run: cargo +nightly fmt --check
  sdist:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist
